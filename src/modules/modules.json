{
  "webAudioNodes": {
    "AudioDestination": {
      "parameters": {},
      "paramNames": [],
      "cv": {},
      "inputs": [
        "IN"
      ],
      "outputs": []
    },
    "feedbackDelayNode": {
      "parameters": {},
      "paramNames": [],
      "cv": {},
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    },
    "Gain": {
      "parameters": {
        "gain": {
          "min": 0,
          "max": 1,
          "default": 1,
          "units": "linear gain",
          "description": "Controls the amount of amplification applied to the input signal.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of gain to create effects like tremolo or dynamic volume changes."
        }
      },
      "paramNames": [
        "gain"
      ],
      "cvNames": [
        "gain"
      ],
      "cv": {
        "gain": {
          "min": 0,
          "max": 1,
          "default": 1,
          "units": "linear gain",
          "description": "Controls the amount of amplification applied to the input signal.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of gain to create effects like tremolo or dynamic volume changes."
        }
      },
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    },
    "VCA": {
      "parameters": {
        "gain": {
          "min": 0,
          "max": 1,
          "default": 1,
          "units": "linear gain",
          "description": "Sets the base gain applied to the input signal.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of gain for tremolo or dynamic volume changes."
        },
        "gain cv +/-": {
          "min": 0,
          "max": 1,
          "default": 0.5,
          "units": "linear scale",
          "description": "Attenuates the effect of the CV input on gain modulation.",
          "modulatable": false,
          "modulationDescription": "N/A"
        }
      },
      "paramNames": [
        "gain",
        "gain cv +/-"
      ],
      "cvNames": [
        "gain"
      ],
      "cv": {
        "gain": {
          "min": 0,
          "max": 1,
          "default": 0,
          "units": "linear gain",
          "description": "Control Voltage input for dynamic gain modulation.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation to control gain dynamically."
        }
      },
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    },
    "HighPassFilter": {
      "parameters": {
        "freq": {
          "min": 80,
          "max": 10000,
          "default": 1000,
          "units": "Hz",
          "description": "The cutoff frequency of the high-pass filter.",
          "modulatable": true,
          "modulationDescription": "Modulating the cutoff frequency allows for dynamic filtering effects."
        },
        "Q": {
          "min": 0.1,
          "max": 20,
          "default": 10,
          "units": "resonance",
          "description": "The resonance or quality factor of the filter.",
          "modulatable": true,
          "modulationDescription": "Higher Q values emphasize frequencies around the cutoff point."
        },
        "freq cv +/-": {
          "min": 80,
          "max": 10000,
          "default": 1000,
          "units": "Hz",
          "description": "Control Voltage input for dynamically modulating the cutoff frequency.",
          "modulatable": true,
          "modulationDescription": "Allows for sweeps or envelope-controlled filtering."
        },
        "Q cv +/-": {
          "min": 0.1,
          "max": 20,
          "default": 1,
          "units": "resonance",
          "description": "Control Voltage input for dynamically modulating the resonance.",
          "modulatable": true,
          "modulationDescription": "Modulating the Q value changes how sharply the filter emphasizes the cutoff frequency."
        }
      },
      "paramNames": [
        "freq",
        "Q",
        "freq cv +/-",
        "Q cv +/-"
      ],
      "cvNames": [
        "freq",
        "Q"
      ],
      "cv": {
        "freq": {
          "min": 80,
          "max": 10000,
          "default": 1000,
          "units": "Hz",
          "description": "Control Voltage input for dynamically modulating the cutoff frequency.",
          "modulatable": true,
          "modulationDescription": "Allows for sweeps or envelope-controlled filtering."
        },
        "Q": {
          "min": 0.1,
          "max": 20,
          "default": 10,
          "units": "resonance",
          "description": "Control Voltage input for dynamically modulating the resonance.",
          "modulatable": true,
          "modulationDescription": "Modulating the Q value changes how sharply the filter emphasizes the cutoff frequency."
        }
      },
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    },
    "Oscillator": {
      "parameters": {
        "frequency": {
          "min": 110,
          "max": 3000,
          "default": 440,
          "units": "Hz",
          "description": "The frequency of the oscillator.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of the frequency to create vibrato or FM synthesis effects."
        },
        "type": {
          "values": [
            "sine",
            "square",
            "sawtooth",
            "triangle",
            "custom"
          ],
          "default": "sine",
          "description": "The waveform shape of the oscillator."
        },
        "freq cv +/-": {
          "min": -1000,
          "max": 1000,
          "default": 100,
          "units": "Hz",
          "description": "The attenuverter of the frequency CV input",
          "modulatable": false,
          "modulationDescription": "The attenuverter of the frequency CV input"
        }
      },
      "paramNames": [
        "frequency",
        "freq cv +/-",
        "type"
      ],
      "cvNames": [
        "frequency"
      ],
      "cv": {
        "frequency": {
          "min": 110,
          "max": 9000,
          "default": 440,
          "units": "Hz",
          "description": "The frequency of the oscillator.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of the frequency to create vibrato or FM synthesis effects."
        }
      },
      "inputs": [],
      "outputs": [
        "OUT"
      ]
    },
    "BiquadFilter": {
      "parameters": {
        "frequency": {
          "min": 10,
          "max": 22050,
          "default": 350,
          "units": "Hz",
          "description": "The frequency at which the filter operates.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of frequency for dynamic filtering effects."
        },
        "freq cv +/-": {
          "min": -1000,
          "max": 1000,
          "default": 0,
          "units": "hz",
          "description": "Adjusts the frequency by detuning.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of detune to create evolving filter effects."
        },
        "detune": {
          "min": -1200,
          "max": 1200,
          "default": 0,
          "units": "cents",
          "description": "Adjusts the frequency by detuning.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of detune to create evolving filter effects."
        },
        "Q": {
          "min": 0.0001,
          "max": 1000,
          "default": 1,
          "units": "unitless",
          "description": "Controls the sharpness of the filter's frequency cutoff.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of Q for dynamic resonance changes."
        },
        "Q cv +/-": {
          "min": -1000,
          "max": 1000,
          "default": 0,
          "units": "hz",
          "description": "Adjusts the frequency by detuning.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of detune to create evolving filter effects."
        },
        "gain": {
          "min": -40,
          "max": 40,
          "default": 0,
          "units": "dB",
          "description": "The gain applied by the filter, applicable for certain filter types.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of gain for dynamic boost or attenuation."
        },
        "type": {
          "values": [
            "lowpass",
            "highpass",
            "bandpass",
            "lowshelf",
            "highshelf",
            "peaking",
            "notch",
            "allpass"
          ],
          "default": "lowpass",
          "description": "The type of filtering applied."
        }
      },
      "paramNames": [
        "frequency",
        "freq cv +/-",
        "detune",
        "Q",
        "Q cv +/-",
        "gain",
        "type"
      ],
      "cvNames": [
        "freq",
        "Q",
        "gain"
      ],
      "cv": {
        "freq": {
          "min": 10,
          "max": 22050,
          "default": 350,
          "units": "Hz",
          "description": "The frequency at which the filter operates.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of frequency for dynamic filtering effects."
        },
        "Q": {
          "min": 0.0001,
          "max": 1000,
          "default": 1,
          "units": "unitless",
          "description": "Controls the sharpness of the filter's frequency cutoff.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of Q for dynamic resonance changes."
        },
        "gain": {
          "min": -40,
          "max": 40,
          "default": 0,
          "units": "dB",
          "description": "The gain applied by the filter, applicable for certain filter types.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of gain for dynamic boost or attenuation."
        }
      },
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    },
    "Delay": {
      "parameters": {
        "delayTime": {
          "min": 0,
          "max": 3000,
          "default": 500,
          "units": "milliseconds",
          "description": "The delay time applied to the input signal.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of the delay time. Connect an AudioNode to modulate this parameter."
        },
        "time cv +/-": {
          "min": -1000,
          "max": 1000,
          "default": 100,
          "units": "Hz",
          "description": "The attenuverter of the delayTime CV input",
          "modulatable": false,
          "modulationDescription": "The attenuverter of the delayTime CV input"
        }
      },
      "paramNames": [
        "delayTime",
        "time cv +/-"
      ],
      "cvNames": [
        "delayTime"
      ],
      "cv": {
        "delayTime": {
          "min": 0,
          "max": 3000,
          "default": 100,
          "units": "seconds",
          "description": "The delay time applied to the input signal.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of the delay time. Connect an AudioNode to modulate this parameter."
        }
      },
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    },
    "AudioBufferSource": {
      "parameters": {
        "playbackRate": {
          "min": 0.0625,
          "max": 1024,
          "default": 1,
          "units": "ratio",
          "description": "The speed at which the audio buffer is played back.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of playback rate for effects like pitch shifting or time-stretching."
        },
        "loopStart": {
          "min": 0,
          "units": "seconds",
          "description": "The point at which looping starts in the buffer.",
          "modulatable": false,
          "modulationDescription": "Not modulatable."
        },
        "loopEnd": {
          "min": 0,
          "units": "seconds",
          "description": "The point at which looping ends in the buffer.",
          "modulatable": false,
          "modulationDescription": "Not modulatable."
        }
      },
      "paramNames": [
        "playbackRate",
        "loopStart",
        "loopEnd"
      ],
      "cvNames": [
        "playbackRate"
      ],
      "cv": {
        "playbackRate": {
          "min": 0.0625,
          "max": 1024,
          "default": 1,
          "units": "ratio",
          "description": "The speed at which the audio buffer is played back.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of playback rate for effects like pitch shifting or time-stretching."
        }
      },
      "inputs": [],
      "outputs": [
        "OUT"
      ]
    },
    "DynamicsCompressor": {
      "parameters": {
        "threshold": {
          "min": -100,
          "max": 0,
          "default": -24,
          "units": "dB",
          "description": "The decibel value above which compression starts.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of threshold for dynamic compression effects."
        },
        "knee": {
          "min": 0,
          "max": 40,
          "default": 30,
          "units": "dB",
          "description": "Controls how gradually compression is applied near the threshold.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of knee for smooth transitions in compression."
        },
        "ratio": {
          "min": 1,
          "max": 20,
          "default": 12,
          "units": "ratio",
          "description": "The compression ratio.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of ratio for varying levels of compression intensity."
        },
        "attack": {
          "min": 0,
          "max": 1,
          "default": 0.003,
          "units": "seconds",
          "description": "How quickly compression is applied.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of attack for dynamically responsive compression."
        },
        "release": {
          "min": 0,
          "max": 1,
          "default": 0.25,
          "units": "seconds",
          "description": "How quickly compression stops after the signal drops below the threshold.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of release for dynamically responsive compression."
        }
      },
      "paramNames": [
        "threshold",
        "knee",
        "ratio",
        "attack",
        "release"
      ],
      "cvNames": [
        "threshold",
        "knee",
        "ratio",
        "attack",
        "release"
      ],
      "cv": {
        "threshold": {
          "min": -100,
          "max": 0,
          "default": -24,
          "units": "dB",
          "description": "The decibel value above which compression starts.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of threshold for dynamic compression effects."
        },
        "knee": {
          "min": 0,
          "max": 40,
          "default": 30,
          "units": "dB",
          "description": "Controls how gradually compression is applied near the threshold.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of knee for smooth transitions in compression."
        },
        "ratio": {
          "min": 1,
          "max": 20,
          "default": 12,
          "units": "ratio",
          "description": "The compression ratio.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of ratio for varying levels of compression intensity."
        },
        "attack": {
          "min": 0,
          "max": 1,
          "default": 0.003,
          "units": "seconds",
          "description": "How quickly compression is applied.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of attack for dynamically responsive compression."
        },
        "release": {
          "min": 0,
          "max": 1,
          "default": 0.25,
          "units": "seconds",
          "description": "How quickly compression stops after the signal drops below the threshold.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of release for dynamically responsive compression."
        }
      },
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    },
    "Convolver": {
      "parameters": {
        "normalize": {
          "values": [
            true,
            false
          ],
          "default": true,
          "description": "Specifies if the impulse response should be normalized.",
          "modulatable": false,
          "modulationDescription": "Not modulatable."
        }
      },
      "paramNames": [
        "normalize"
      ],
      "cv": {},
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    },
    "Analyser": {
      "parameters": {
        "fftSize": {
          "min": 32,
          "max": 32768,
          "default": 2048,
          "units": "samples",
          "description": "The size of the FFT to be used for frequency-domain analysis.",
          "modulatable": false,
          "modulationDescription": "Not modulatable."
        },
        "minDecibels": {
          "min": -100,
          "max": 0,
          "default": -100,
          "units": "dB",
          "description": "The minimum power level in decibels for the analyser.",
          "modulatable": false,
          "modulationDescription": "Not modulatable."
        },
        "maxDecibels": {
          "min": -100,
          "max": 0,
          "default": -30,
          "units": "dB",
          "description": "The maximum power level in decibels for the analyser.",
          "modulatable": false,
          "modulationDescription": "Not modulatable."
        },
        "smoothingTimeConstant": {
          "min": 0,
          "max": 1,
          "default": 0.8,
          "units": "unitless",
          "description": "The smoothing constant for the frequency data.",
          "modulatable": false,
          "modulationDescription": "Not modulatable."
        }
      },
      "paramNames": [
        "fftSize",
        "minDecibels",
        "maxDecibels",
        "smoothingTimeConstant"
      ],
      "cv": {},
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    },
    "WaveShaper": {
      "parameters": {
        "curve": {
          "default": null,
          "description": "The shaping curve for the distortion effect.",
          "modulatable": false,
          "modulationDescription": "Not modulatable."
        },
        "oversample": {
          "values": [
            "none",
            "2x",
            "4x"
          ],
          "default": "none",
          "description": "The oversampling factor to apply to reduce aliasing.",
          "modulatable": false,
          "modulationDescription": "Not modulatable."
        }
      },
      "paramNames": [
        "curve",
        "oversample"
      ],
      "cv": {},
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    },
    "StereoPanner": {
      "parameters": {
        "pan": {
          "min": -1,
          "max": 1,
          "default": 0,
          "units": "unitless",
          "description": "The left-right panning of the audio signal.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of panning for dynamic spatial effects."
        }
      },
      "paramNames": [
        "pan"
      ],
      "cvNames": [
        "pan"
      ],
      "cv": {
        "pan": {
          "min": -1,
          "max": 1,
          "default": 0,
          "units": "unitless",
          "description": "The left-right panning of the audio signal.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of panning for dynamic spatial effects."
        }
      },
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    },
    "Panner": {
      "parameters": {
        "positionX": {
          "min": -1,
          "max": 1,
          "default": 0,
          "units": "relative position",
          "description": "The X position of the sound source.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of X position for dynamic spatial panning."
        },
        "positionY": {
          "min": -1,
          "max": 1,
          "default": 0,
          "units": "relative position",
          "description": "The Y position of the sound source.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of Y position for dynamic spatial panning."
        },
        "positionZ": {
          "min": -1,
          "max": 1,
          "default": 0,
          "units": "relative position",
          "description": "The Z position of the sound source.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of Z position for immersive spatial audio effects."
        },
        "orientationX": {
          "min": -1,
          "max": 1,
          "default": 0,
          "units": "relative orientation",
          "description": "The X orientation of the sound source.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of X orientation for spatial rotation effects."
        },
        "orientationY": {
          "min": -1,
          "max": 1,
          "default": 0,
          "units": "relative orientation",
          "description": "The Y orientation of the sound source.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of Y orientation for spatial rotation effects."
        },
        "orientationZ": {
          "min": -1,
          "max": 1,
          "default": 0,
          "units": "relative orientation",
          "description": "The Z orientation of the sound source.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of Z orientation for spatial rotation effects."
        }
      },
      "paramNames": [
        "positionX",
        "positionY",
        "positionZ",
        "orientationX",
        "orientationY",
        "orientationZ"
      ],
      "cvNames": [
        "positionX",
        "positionY",
        "positionZ",
        "orientationX",
        "orientationY",
        "orientationZ"
      ],
      "cv": {
        "positionX": {
          "min": -1,
          "max": 1,
          "default": 0,
          "units": "relative position",
          "description": "The X position of the sound source.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of X position for dynamic spatial panning."
        },
        "positionY": {
          "min": -1,
          "max": 1,
          "default": 0,
          "units": "relative position",
          "description": "The Y position of the sound source.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of Y position for dynamic spatial panning."
        },
        "positionZ": {
          "min": -1,
          "max": 1,
          "default": 0,
          "units": "relative position",
          "description": "The Z position of the sound source.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of Z position for immersive spatial audio effects."
        },
        "orientationX": {
          "min": -1,
          "max": 1,
          "default": 0,
          "units": "relative orientation",
          "description": "The X orientation of the sound source.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of X orientation for spatial rotation effects."
        },
        "orientationY": {
          "min": -1,
          "max": 1,
          "default": 0,
          "units": "relative orientation",
          "description": "The Y orientation of the sound source.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of Y orientation for spatial rotation effects."
        },
        "orientationZ": {
          "min": -1,
          "max": 1,
          "default": 0,
          "units": "relative orientation",
          "description": "The Z orientation of the sound source.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of Z orientation for spatial rotation effects."
        }
      },
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    },
    "ChannelMerger": {
      "parameters": {},
      "paramNames": [],
      "cv": {},
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    },
    "ChannelSplitter": {
      "parameters": {},
      "paramNames": [],
      "cv": {},
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    },
    "MediaElementAudioSource": {
      "parameters": {},
      "paramNames": [],
      "cv": {},
      "inputs": [],
      "outputs": [
        "OUT"
      ]
    },
    "MediaStreamAudioSource": {
      "parameters": {},
      "paramNames": [],
      "cv": {},
      "inputs": [],
      "outputs": [
        "OUT"
      ]
    },
    "MediaStreamAudioDestination": {
      "parameters": {},
      "paramNames": [],
      "cv": {},
      "inputs": [
        "IN"
      ],
      "outputs": []
    },
    "ConstantSource": {
      "parameters": {
        "offset": {
          "min": -1,
          "max": 1,
          "default": 0,
          "units": "unitless",
          "description": "The constant offset value output by the node.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of the offset value for steady or dynamic constant signals."
        }
      },
      "paramNames": [
        "offset"
      ],
      "cvNames": [
        "offset"
      ],
      "cv": {
        "offset": {
          "min": -1,
          "max": 1,
          "default": 0,
          "units": "unitless",
          "description": "The constant offset value output by the node.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of the offset value for steady or dynamic constant signals."
        }
      },
      "inputs": [],
      "outputs": [
        "OUT"
      ]
    },
    "PeriodicWave": {
      "parameters": {
        "real": {
          "default": null,
          "description": "An array of real coefficients for the periodic wave.",
          "modulatable": false,
          "modulationDescription": "Not modulatable."
        },
        "imag": {
          "default": null,
          "description": "An array of imaginary coefficients for the periodic wave.",
          "modulatable": false,
          "modulationDescription": "Not modulatable."
        }
      },
      "paramNames": [
        "real",
        "imag"
      ],
      "cv": {},
      "inputs": [],
      "outputs": []
    },
    "AudioWorklet": {
      "parameters": {
        "port": {
          "description": "The port used to communicate with the audio worklet.",
          "modulatable": false,
          "modulationDescription": "Not modulatable."
        }
      },
      "paramNames": [
        "port"
      ],
      "cv": {},
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    },
    "ModGain": {
      "parameters": {
        "gain": {
          "min": 0,
          "max": 1000,
          "default": 50,
          "units": "linear gain",
          "description": "Controls the amount of amplification applied to the input signal.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of gain to create effects like tremolo or dynamic volume changes."
        }
      },
      "paramNames": [
        "gain"
      ],
      "cvNames": [
        "gain"
      ],
      "cv": {
        "gain": {
          "min": 0,
          "max": 1,
          "default": 1,
          "units": "linear gain",
          "description": "Controls the amount of amplification applied to the input signal.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of gain to create effects like tremolo or dynamic volume changes."
        }
      },
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    },
    "LFO": {
      "parameters": {
        "frequency": {
          "min": 0.01,
          "max": 10,
          "default": 1,
          "units": "Hz",
          "description": "The frequency of the low frequency oscillator.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of the frequency to create vibrato or FM synthesis effects."
        },
        "type": {
          "values": [
            "sine",
            "square",
            "sawtooth",
            "triangle",
            "custom"
          ],
          "default": "sine",
          "description": "The waveform shape of the oscillator."
        },
        "freq cv +/-": {
          "min": -20,
          "max": 20,
          "default": 10,
          "units": "Hz",
          "description": "The attenuverter of the frequency CV input",
          "modulatable": false,
          "modulationDescription": "The attenuverter of the frequency CV input"
        }
      },
      "paramNames": [
        "frequency",
        "freq cv +/-",
        "type"
      ],
      "cvNames": [
        "frequency"
      ],
      "cv": {
        "frequency": {
          "min": 0.01,
          "max": 10,
          "default": 5,
          "units": "Hz",
          "description": "The frequency of the oscillator.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of the frequency to create vibrato or FM synthesis effects."
        }
      },
      "inputs": [],
      "outputs": [
        "OUT"
      ]
    },
    "LFO2": {
      "parameters": {
        "frequency": {
          "min": 0.01,
          "max": 10,
          "default": 1,
          "units": "Hz",
          "description": "The frequency of the low frequency oscillator.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of the frequency to create vibrato or FM synthesis effects."
        },
        "freq cv +/-": {
          "min": -20,
          "max": 20,
          "default": 10,
          "units": "Hz",
          "description": "The attenuverter of the frequency CV input",
          "modulatable": false,
          "modulationDescription": "The attenuverter of the frequency CV input"
        }
      },
      "paramNames": [
        "frequency",
        "freq cv +/-"
      ],
      "cvNames": [
        "frequency"
      ],
      "cv": {
        "frequency": {
          "min": 0.01,
          "max": 10,
          "default": 5,
          "units": "Hz",
          "description": "The frequency of the oscillator.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of the frequency to create vibrato or FM synthesis effects."
        }
      },
      "inputs": [],
      "outputs": [
        "sine",
        "tri",
        "saw",
        "square"
      ]
    },
    "GateSequencer": {
      "parameters": {
        "stepCount": {
          "min": 1,
          "max": 16,
          "default": 8,
          "units": "steps",
          "description": "Number of steps in the sequence.",
          "modulatable": false
        },
        "tempo": {
          "min": 20,
          "max": 300,
          "default": 120,
          "units": "BPM",
          "description": "Controls the speed of the sequence.",
          "modulatable": true,
          "modulationDescription": "Can be modulated for tempo variations."
        },
        "gateLength": {
          "min": 0.05,
          "max": 1,
          "default": 0.5,
          "units": "ratio",
          "description": "Fraction of a step where the gate is active.",
          "modulatable": true,
          "modulationDescription": "Can be modulated for dynamic gate timing."
        }
      },
      "paramNames": [
        "stepCount",
        "tempo",
        "gateLength"
      ],
      "cvNames": [
        "tempo",
        "gateLength"
      ],
      "cv": {
        "tempo": {
          "min": 20,
          "max": 300,
          "default": 120,
          "units": "BPM",
          "description": "Modulation input for tempo control.",
          "modulatable": true
        },
        "gateLength": {
          "min": 0.05,
          "max": 1,
          "default": 0.5,
          "units": "ratio",
          "description": "Modulation input for gate length.",
          "modulatable": true
        }
      },
      "inputs": [],
      "outputs": [
        "OUT"
      ]
    },
    "OutputLimiter": {
      "parameters": {
        "threshold": {
          "min": -100,
          "max": 0,
          "default": -1,
          "units": "dB",
          "description": "The decibel value above which limiting starts.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of threshold for dynamic limiting effects."
        },
        "knee": {
          "min": 0,
          "max": 40,
          "default": 0,
          "units": "dB",
          "description": "Controls how gradually limiting is applied near the threshold.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of knee for smooth transitions in limiting."
        },
        "ratio": {
          "min": 1,
          "max": 20,
          "default": 20,
          "units": "ratio",
          "description": "The limiting ratio, typically very high for a limiter.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of ratio for precise limiting control."
        },
        "attack": {
          "min": 0,
          "max": 1,
          "default": 0.003,
          "units": "seconds",
          "description": "How quickly limiting is applied after the signal exceeds the threshold.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of attack for dynamically responsive limiting."
        },
        "release": {
          "min": 0,
          "max": 1,
          "default": 0.25,
          "units": "seconds",
          "description": "How quickly limiting stops after the signal drops below the threshold.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of release for dynamically responsive limiting."
        }
      },
      "paramNames": [
        "threshold",
        "knee",
        "ratio",
        "attack",
        "release"
      ],
      "cvNames": [
        "threshold",
        "knee",
        "ratio",
        "attack",
        "release"
      ],
      "cv": {
        "threshold": {
          "min": -100,
          "max": 0,
          "default": -1,
          "units": "dB",
          "description": "The decibel value above which limiting starts.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of threshold for dynamic limiting effects."
        },
        "knee": {
          "min": 0,
          "max": 40,
          "default": 0,
          "units": "dB",
          "description": "Controls how gradually limiting is applied near the threshold.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of knee for smooth transitions in limiting."
        },
        "ratio": {
          "min": 1,
          "max": 20,
          "default": 20,
          "units": "ratio",
          "description": "The limiting ratio, typically very high for a limiter.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of ratio for precise limiting control."
        },
        "attack": {
          "min": 0,
          "max": 1,
          "default": 0.003,
          "units": "seconds",
          "description": "How quickly limiting is applied after the signal exceeds the threshold.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of attack for dynamically responsive limiting."
        },
        "release": {
          "min": 0,
          "max": 1,
          "default": 0.25,
          "units": "seconds",
          "description": "How quickly limiting stops after the signal drops below the threshold.",
          "modulatable": true,
          "modulationDescription": "Audio-rate modulation of release for dynamically responsive limiting."
        }
      },
      "inputs": [
        "IN"
      ],
      "outputs": [
        "OUT"
      ]
    }
  },
  "rnboDevices": {
    "oscillator": {
      "parameters": {
        "frequency": {
          "type": "ParameterTypeNumber",
          "index": 0,
          "name": "frequency",
          "paramId": "frequency",
          "minimum": 110,
          "maximum": 880,
          "exponent": 1,
          "steps": 0,
          "initialValue": 220,
          "isEnum": false,
          "enumValues": [],
          "displayName": "",
          "unit": "",
          "order": 0,
          "debug": false,
          "visible": true,
          "signalIndex": null,
          "ioType": "IOTypeUndefined",
          "description": "frequency"
        }
      },
      "paramNames": [
        "frequency"
      ],
      "cvNames": [
        "frequency"
      ],
      "cv": {
        "frequency": {
          "type": "ParameterTypeNumber",
          "index": 0,
          "name": "frequency",
          "paramId": "frequency",
          "minimum": 110,
          "maximum": 880,
          "exponent": 1,
          "steps": 0,
          "initialValue": 220,
          "isEnum": false,
          "enumValues": [],
          "displayName": "",
          "unit": "",
          "order": 0,
          "debug": false,
          "visible": true,
          "signalIndex": null,
          "ioType": "IOTypeUndefined",
          "description": "frequency"
        }
      },
      "inputs": [],
      "outputs": [
        "sine out"
      ],
      "structure": "rnboDevice",
      "src": "./public/wasm/oscillator.wasm",
      "desc": {
        "parameters": [
          {
            "type": "ParameterTypeNumber",
            "index": 0,
            "name": "frequency",
            "paramId": "frequency",
            "minimum": 110,
            "maximum": 880,
            "exponent": 1,
            "steps": 0,
            "initialValue": 220,
            "isEnum": false,
            "enumValues": [],
            "displayName": "",
            "unit": "",
            "order": 0,
            "debug": false,
            "visible": true,
            "signalIndex": null,
            "ioType": "IOTypeUndefined",
            "description": "frequency"
          }
        ],
        "numParameters": 1,
        "numSignalInParameters": 0,
        "numSignalOutParameters": 0,
        "numInputChannels": 0,
        "numOutputChannels": 1,
        "numMidiInputPorts": 0,
        "numMidiOutputPorts": 0,
        "transportUsed": false,
        "externalDataRefs": [],
        "patcherSerial": 0,
        "inports": [],
        "outports": [],
        "inlets": [],
        "outlets": [
          {
            "type": "signal",
            "index": 1,
            "tag": "out1",
            "meta": {
              "name": "sine out"
            }
          }
        ],
        "paramConversion": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 0:\n        {\n            value = (value < 110 ? 110 : (value > 880 ? 880 : value));\n            let normalizedValue = (value - 110) / (880 - 110);\n            return normalizedValue;\n        }\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 0:\n        {\n            {\n                return 110 + value * (880 - 110);\n            }\n        }\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 1;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    case 0:\n        {\n            v = (v > 880 ? 880 : (v < 110 ? 110 : v));\n            return v;\n        }\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "presetid": "rnbo",
        "meta": {
          "architecture": "x64",
          "filename": "moduleBuilder.maxpat",
          "rnboobjname": "rnbomatic",
          "maxversion": "8.6.5",
          "rnboversion": "1.3.2",
          "name": "untitled"
        }
      }
    },
    "simpleSynth": {
      "parameters": {
        "frequency": {
          "type": "ParameterTypeNumber",
          "index": 0,
          "name": "frequency",
          "paramId": "frequency",
          "minimum": 110,
          "maximum": 880,
          "exponent": 1,
          "steps": 0,
          "initialValue": 220,
          "isEnum": false,
          "enumValues": [],
          "displayName": "",
          "unit": "",
          "order": 0,
          "debug": false,
          "visible": true,
          "signalIndex": null,
          "ioType": "IOTypeUndefined",
          "description": "frequency"
        },
        "modulation": {
          "type": "ParameterTypeNumber",
          "index": 1,
          "name": "modulation",
          "paramId": "modulation",
          "minimum": -100,
          "maximum": 100,
          "exponent": 1,
          "steps": 0,
          "initialValue": 1,
          "isEnum": false,
          "enumValues": [],
          "displayName": "",
          "unit": "",
          "order": 0,
          "debug": false,
          "visible": true,
          "signalIndex": null,
          "ioType": "IOTypeUndefined",
          "description": "modulation"
        },
        "volume": {
          "type": "ParameterTypeNumber",
          "index": 2,
          "name": "volume",
          "paramId": "volume",
          "minimum": 0,
          "maximum": 100,
          "exponent": 1,
          "steps": 0,
          "initialValue": 0.5,
          "isEnum": false,
          "enumValues": [],
          "displayName": "",
          "unit": "",
          "order": 0,
          "debug": false,
          "visible": true,
          "signalIndex": null,
          "ioType": "IOTypeUndefined",
          "description": "volume"
        }
      },
      "paramNames": [
        "frequency",
        "modulation",
        "volume"
      ],
      "cvNames": [
        "frequency",
        "modulation",
        "volume"
      ],
      "cv": {
        "frequency": {
          "type": "ParameterTypeNumber",
          "index": 0,
          "name": "frequency",
          "paramId": "frequency",
          "minimum": 110,
          "maximum": 880,
          "exponent": 1,
          "steps": 0,
          "initialValue": 220,
          "isEnum": false,
          "enumValues": [],
          "displayName": "",
          "unit": "",
          "order": 0,
          "debug": false,
          "visible": true,
          "signalIndex": null,
          "ioType": "IOTypeUndefined",
          "description": "frequency"
        },
        "modulation": {
          "type": "ParameterTypeNumber",
          "index": 1,
          "name": "modulation",
          "paramId": "modulation",
          "minimum": -100,
          "maximum": 100,
          "exponent": 1,
          "steps": 0,
          "initialValue": 1,
          "isEnum": false,
          "enumValues": [],
          "displayName": "",
          "unit": "",
          "order": 0,
          "debug": false,
          "visible": true,
          "signalIndex": null,
          "ioType": "IOTypeUndefined",
          "description": "modulation"
        },
        "volume": {
          "type": "ParameterTypeNumber",
          "index": 2,
          "name": "volume",
          "paramId": "volume",
          "minimum": 0,
          "maximum": 100,
          "exponent": 1,
          "steps": 0,
          "initialValue": 0.5,
          "isEnum": false,
          "enumValues": [],
          "displayName": "",
          "unit": "",
          "order": 0,
          "debug": false,
          "visible": true,
          "signalIndex": null,
          "ioType": "IOTypeUndefined",
          "description": "volume"
        }
      },
      "inputs": [],
      "outputs": [
        "out"
      ],
      "structure": "rnboDevice",
      "src": "./public/wasm/simpleSynth.wasm",
      "desc": {
        "parameters": [
          {
            "type": "ParameterTypeNumber",
            "index": 0,
            "name": "frequency",
            "paramId": "frequency",
            "minimum": 110,
            "maximum": 880,
            "exponent": 1,
            "steps": 0,
            "initialValue": 220,
            "isEnum": false,
            "enumValues": [],
            "displayName": "",
            "unit": "",
            "order": 0,
            "debug": false,
            "visible": true,
            "signalIndex": null,
            "ioType": "IOTypeUndefined",
            "description": "frequency"
          },
          {
            "type": "ParameterTypeNumber",
            "index": 1,
            "name": "modulation",
            "paramId": "modulation",
            "minimum": -100,
            "maximum": 100,
            "exponent": 1,
            "steps": 0,
            "initialValue": 1,
            "isEnum": false,
            "enumValues": [],
            "displayName": "",
            "unit": "",
            "order": 0,
            "debug": false,
            "visible": true,
            "signalIndex": null,
            "ioType": "IOTypeUndefined",
            "description": "modulation"
          },
          {
            "type": "ParameterTypeNumber",
            "index": 2,
            "name": "volume",
            "paramId": "volume",
            "minimum": 0,
            "maximum": 100,
            "exponent": 1,
            "steps": 0,
            "initialValue": 0.5,
            "isEnum": false,
            "enumValues": [],
            "displayName": "",
            "unit": "",
            "order": 0,
            "debug": false,
            "visible": true,
            "signalIndex": null,
            "ioType": "IOTypeUndefined",
            "description": "volume"
          }
        ],
        "numParameters": 3,
        "numSignalInParameters": 0,
        "numSignalOutParameters": 0,
        "numInputChannels": 0,
        "numOutputChannels": 1,
        "numMidiInputPorts": 0,
        "numMidiOutputPorts": 0,
        "transportUsed": false,
        "externalDataRefs": [],
        "patcherSerial": 0,
        "inports": [],
        "outports": [],
        "inlets": [],
        "outlets": [
          {
            "type": "signal",
            "index": 1,
            "tag": "out1",
            "meta": {
              "name": "out"
            }
          }
        ],
        "paramConversion": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 2:\n        {\n            value = (value < 0 ? 0 : (value > 100 ? 100 : value));\n            let normalizedValue = (value - 0) / (100 - 0);\n            return normalizedValue;\n        }\n    case 0:\n        {\n            value = (value < 110 ? 110 : (value > 880 ? 880 : value));\n            let normalizedValue = (value - 110) / (880 - 110);\n            return normalizedValue;\n        }\n    case 1:\n        {\n            value = (value < -100 ? -100 : (value > 100 ? 100 : value));\n            let normalizedValue = (value - -100) / (100 - -100);\n            return normalizedValue;\n        }\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 2:\n        {\n            {\n                return 0 + value * (100 - 0);\n            }\n        }\n    case 0:\n        {\n            {\n                return 110 + value * (880 - 110);\n            }\n        }\n    case 1:\n        {\n            {\n                return -100 + value * (100 - -100);\n            }\n        }\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 3;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    case 0:\n        {\n            v = (v > 880 ? 880 : (v < 110 ? 110 : v));\n            return v;\n        }\n    case 1:\n        {\n            v = (v > 100 ? 100 : (v < -100 ? -100 : v));\n            return v;\n        }\n    case 2:\n        {\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\n            return v;\n        }\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "presetid": "rnbo",
        "meta": {
          "architecture": "x64",
          "filename": "moduleBuilder.maxpat",
          "rnboobjname": "rnbomatic",
          "maxversion": "8.6.5",
          "rnboversion": "1.3.2",
          "name": "untitled"
        }
      }
    },
    "vca": {
      "parameters": {
        "attenuate": {
          "type": "ParameterTypeNumber",
          "index": 0,
          "name": "attenuate",
          "paramId": "attenuate",
          "minimum": 0,
          "maximum": 1,
          "exponent": 1,
          "steps": 0,
          "initialValue": 0.5,
          "isEnum": false,
          "enumValues": [],
          "displayName": "",
          "unit": "",
          "order": 0,
          "debug": false,
          "visible": true,
          "signalIndex": null,
          "ioType": "IOTypeUndefined",
          "description": "attenuate"
        }
      },
      "paramNames": [
        "attenuate"
      ],
      "cvNames": [
        "attenuate"
      ],
      "cv": {
        "attenuate": {
          "type": "ParameterTypeNumber",
          "index": 0,
          "name": "attenuate",
          "paramId": "attenuate",
          "minimum": 0,
          "maximum": 1,
          "exponent": 1,
          "steps": 0,
          "initialValue": 0.5,
          "isEnum": false,
          "enumValues": [],
          "displayName": "",
          "unit": "",
          "order": 0,
          "debug": false,
          "visible": true,
          "signalIndex": null,
          "ioType": "IOTypeUndefined",
          "description": "attenuate"
        }
      },
      "inputs": [
        {
          "name": "signalInput"
        },
        {
          "name": "cvInput"
        }
      ],
      "outputs": [
        "out"
      ],
      "structure": "rnboDevice",
      "src": "./public/wasm/vca.wasm",
      "desc": {
        "parameters": [
          {
            "type": "ParameterTypeNumber",
            "index": 0,
            "name": "attenuate",
            "paramId": "attenuate",
            "minimum": 0,
            "maximum": 1,
            "exponent": 1,
            "steps": 0,
            "initialValue": 0.5,
            "isEnum": false,
            "enumValues": [],
            "displayName": "",
            "unit": "",
            "order": 0,
            "debug": false,
            "visible": true,
            "signalIndex": null,
            "ioType": "IOTypeUndefined",
            "description": "attenuate"
          }
        ],
        "numParameters": 1,
        "numSignalInParameters": 0,
        "numSignalOutParameters": 0,
        "numInputChannels": 2,
        "numOutputChannels": 1,
        "numMidiInputPorts": 0,
        "numMidiOutputPorts": 0,
        "transportUsed": false,
        "externalDataRefs": [],
        "patcherSerial": 0,
        "inports": [],
        "outports": [],
        "inlets": [
          {
            "type": "signal",
            "index": 1,
            "tag": "in1",
            "meta": {
              "name": "signalInput"
            }
          },
          {
            "type": "signal",
            "index": 2,
            "tag": "in2",
            "meta": {
              "name": "cvInput"
            }
          }
        ],
        "outlets": [
          {
            "type": "signal",
            "index": 1,
            "tag": "out1",
            "meta": {
              "name": "out"
            }
          }
        ],
        "paramConversion": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 0:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 0) / (1 - 0);\n            return normalizedValue;\n        }\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 0:\n        {\n            {\n                return 0 + value * (1 - 0);\n            }\n        }\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 1;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    case 0:\n        {\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\n            return v;\n        }\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": false
        },
        "presetid": "rnbo",
        "meta": {
          "architecture": "x64",
          "filename": "moduleBuilder.maxpat",
          "rnboobjname": "rnbomatic",
          "maxversion": "8.6.5",
          "rnboversion": "1.3.2",
          "name": "untitled"
        }
      }
    }
  }
}